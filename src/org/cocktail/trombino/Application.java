// Generated by the WOLips Templateengine Plug-in at 18 sept. 2006 15:53:17

package org.cocktail.trombino;

import org.cocktail.fwkcktlwebapp.server.CktlWebApplication;
import org.cocktail.fwkcktlwebapp.server.database.CktlDataBus;
import org.cocktail.trombino.metier.NiveauHabilitation;
import org.cocktail.trombino.metier.ScolFormationAnnee;

import com.webobjects.appserver.WOApplication;
import com.webobjects.eoaccess.EOModel;
import com.webobjects.eoaccess.EOModelGroup;
import com.webobjects.eocontrol.EOAndQualifier;
import com.webobjects.eocontrol.EOQualifier;
import com.webobjects.eocontrol.EOSharedEditingContext;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSDictionary;
import com.webobjects.foundation.NSLog;
import com.webobjects.foundation.NSMutableArray;

public class Application extends CktlWebApplication {

	public NSArray listNiveau, listAnnees;
	public NSMutableArray listGrades;
	public boolean bypassIndphotoFlag = false;

	private CktlDataBus databus;

	private EOSharedEditingContext sharedEC;

	public static void main(String argv[]) {
		WOApplication.main(argv, Application.class);
	}

	public Application() {
		super();
		NSLog.out.appendln("Welcome to " + this.name() + " !");
		System.out.println(configFileName());
		System.out.println(config().stringForKey("SAUT_URL"));
		System.out.println(config().stringForKey("SAUT_ID_TRANSLATION"));
		doMiscInitialisations();
	}

	public CktlDataBus dataBus() {
		if (databus == null) {
			databus = getNewDataBus(sharedEC);
		}
		return databus;
	}

	private void doMiscInitialisations() {
		sharedEC = EOSharedEditingContext.defaultSharedEditingContext();
		EOSortOrdering sortAbrev = new EOSortOrdering("fgraAbreviation", EOSortOrdering.CompareCaseInsensitiveAscending);
		listGrades = new NSMutableArray();
		EOQualifier qualValidite = EOQualifier.qualifierWithQualifierFormat("fgraValidite='O'", null);
		EOQualifier qualValidite2 = EOQualifier.qualifierWithQualifierFormat("scolFormationDiplome != nil", null);
		NSMutableArray args = new NSMutableArray();
		args.addObject(qualValidite);
		args.addObject(qualValidite2);
		listGrades.addObjectsFromArray(DBHandler.fetchData(sharedEC, "ScolFormationGrade", new EOAndQualifier(args), sortAbrev));
		qualValidite = EOQualifier.qualifierWithQualifierFormat("ffilValidite='O'", null);
		sortAbrev = new EOSortOrdering("ffilAbreviation", EOSortOrdering.CompareCaseInsensitiveAscending);
		listGrades.addObjectsFromArray(DBHandler.fetchData(sharedEC, "ScolFormationFiliere", qualValidite, sortAbrev));

		int niveauMax = config().intForKey("APP_NIVEAU_FORMATION_MAX");
		if (niveauMax <= 0) {
			niveauMax = 3;
		}
		NiveauHabilitation[] niveaux = new NiveauHabilitation[niveauMax];
		for (int i = 0; i < niveauMax; i++) {
			niveaux[i] = new NiveauHabilitation(i + 1);
		}
		listNiveau = new NSArray<NiveauHabilitation>(niveaux);

		EOSortOrdering sortAnnee = new EOSortOrdering("fannDebut", EOSortOrdering.CompareDescending);
		int anneeUniv = getAnneeUniversitaire().intValue();
		EOQualifier qualAn = EOQualifier.qualifierWithQualifierFormat("fannDebut<=" + (anneeUniv) + " and fannDebut>" + (anneeUniv - 3), null);
		listAnnees = DBHandler.fetchData(sharedEC, "ScolFormationAnnee", qualAn, sortAnnee);

		bypassIndphotoFlag = config().booleanForKey("BYPASS_INDPHOTO_FLAG");
	}

	public Number getAnneeUniversitaire() {
		EOQualifier qualAnnee = EOQualifier.qualifierWithQualifierFormat("fannCourante='O'", null);
		ScolFormationAnnee annee = (ScolFormationAnnee) DBHandler.fetchUniqueData(sharedEC, "ScolFormationAnnee", qualAnnee);
		if (annee != null) {
			return annee.fannDebut();
		}
		else {
			return null;
		}
	}

	public String urlEtablissement() {
		String url = config().stringForKey("URL_ETABLISSEMENT");
		if (url == null) {
			url = "";
		}
		return url;
	}

	public String mailContact() {
		String url = config().stringForKey("EMAIL_CONTACT");
		if (url == null) {
			url = "";
		}
		return url;
	}

	public String mailContactHref() {
		return "mailto:" + mailContact();
	}

	public NSDictionary connectionDictionaryToDB() {
		final EOModelGroup modelGroup = EOModelGroup.defaultGroup();
		final EOModel model = modelGroup.modelNamed("Scolarite");
		return model.connectionDictionary();
	}

	public String configFileName() {
		return "TrombiWeb.config";
	}

	public String configTableName() {
		return "FwkCktlWebApp_GrhumParametres";
	}

	public String urlWebService() {
		return null;
	}

	public String emailHandleException() {
		return config().stringForKey("EMAIL_REDIRECTION");
	}

	public boolean _isSupportedDevelopmentPlatform() {
		return (super._isSupportedDevelopmentPlatform() || System.getProperty("os.name").startsWith("Win"));
	}
}